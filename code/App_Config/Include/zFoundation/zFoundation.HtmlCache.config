<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:messagingTransport="http://www.sitecore.net/xmlconfig/messagingTransport/">
  <sitecore role:require="Standalone or ContentManagement or ContentDelivery" messagingTransport:require="SQL">
    <commands role:require="Standalone or ContentManagement">
      <command name="cache:SiteClearCacheCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheCommand,Foundation.HtmlCache"/>
      <command name="cache:SiteClearCacheAllLanguagesCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheAllLanguagesCommand,Foundation.HtmlCache"/>
      <command name="cache:SiteClearCacheAllSitesCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheAllSitesCommand,Foundation.HtmlCache"/>
    </commands>
    <settings>
      <!-- This setting contains all common templates that should be tracked across multiple renderings such as images, pdfs etc.-->
      <setting name="GlobalCacheableTemplateIDs" value="{DAF085E8-602E-43A6-8299-038FF171349F}"/>
      <setting name="PersistRecordedHtml" value="true" />

      <setting name="MaxItemNameLength" value="100">
        <patch:attribute name="value">3000</patch:attribute>
      </setting>
      <setting name="AllowDuplicateItemNamesOnSameLevel" value="true">
        <patch:attribute name="value">false</patch:attribute>
      </setting>

      <setting name="redisConnectionString" value="192.168.50.3:6379,password=qZtsyp0TR2Ay,ssl=False,abortConnect=False" />
      <setting name="redisDatabase" value="15" />

    </settings>
    <pipelines>
      <initialize>
        <processor type="Foundation.HtmlCache.Pipelines.InitializeRedisSubscribers, Foundation.HtmlCache" method="Initialize" role:require="Standalone or ContentManagement or ContentDelivery" />
        <processor type="Foundation.HtmlCache.Pipelines.InitializePersistedHtmlCache, Foundation.HtmlCache" method="Initialize" role:require="Standalone or ContentDelivery" />
      </initialize>
      <mvc.renderRendering>
        <processor
          type="Foundation.HtmlCache.Pipelines.RenderFromPersistantCache, Foundation.HtmlCache"
          patch:after="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderFromCache, Sitecore.Mvc']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.BeginRenderingContext, Foundation.HtmlCache"
          patch:after="processor[@type='Foundation.HtmlCache.Pipelines.RenderFromPersistantCache, Foundation.HtmlCache']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.EndRenderingContext, Foundation.HtmlCache"
          patch:before="processor[@type='Foundation.HtmlCache.Pipelines.SaveToPersistantCache, Foundation.HtmlCache']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.SaveToPersistantCache, Foundation.HtmlCache"
          patch:before="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.AddRecordedHtmlToCache, Sitecore.Mvc']" role:require="Standalone or ContentDelivery" />
      </mvc.renderRendering>
      <group name="itemProvider" groupName="itemProvider">
        <pipelines>
          <getItem>
            <processor
              type="Foundation.HtmlCache.Providers.TrackItemAccess, Foundation.HtmlCache"
              patch:after="processor[@type='Sitecore.ContentTesting.Pipelines.ItemProvider.GetItem.GetItemUnderTestProcessor, Sitecore.ContentTesting']" role:require="Standalone or ContentDelivery" />
          </getItem>
        </pipelines>
      </group>
    </pipelines>
    <events>
      <event name="publish:itemProcessing">
        <handler type="Foundation.HtmlCache.Events.ItemPrePublish, Foundation.HtmlCache" method="CalculatePublishOperation" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:itemProcessed">
        <handler type="Foundation.HtmlCache.Events.ItemPublishMessenger, Foundation.HtmlCache" method="PublishItemPublishMessage" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:end">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <patch:delete />
        </handler>
      </event>
      <event name="publish:end:remote">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <patch:delete />
        </handler>
      </event>
    </events>
    <controlSources>
      <source mode="on" namespace="Foundation.HtmlCache.Controls" assembly="Foundation.HtmlCache" prefix="Foundation.HtmlCache"/>
    </controlSources>
    <services>
      <register
        serviceType="Foundation.HtmlCache.Connections.IRedisSharedConnection, Foundation.HtmlCache"
        implementationType="Foundation.HtmlCache.Connections.RedisSharedConnection, Foundation.HtmlCache"
        lifetime="Singleton" role:require="Standalone or ContentManagement or ContentDelivery"/>
      <register
        serviceType="Foundation.HtmlCache.Providers.IRedisCacheProvider, Foundation.HtmlCache"
        implementationType="Foundation.HtmlCache.Providers.RedisCacheProvider, Foundation.HtmlCache"
        lifetime="Singleton" role:require="Standalone or ContentManagement or ContentDelivery"/>
      <register
        serviceType="Foundation.HtmlCache.Providers.IRedisRenderingCacheManager, Foundation.HtmlCache"
        implementationType="Foundation.HtmlCache.Providers.RedisRenderingCacheManager, Foundation.HtmlCache"
        lifetime="Singleton" role:require="Standalone or ContentManagement or ContentDelivery"/>
    </services>
  </sitecore>
</configuration>