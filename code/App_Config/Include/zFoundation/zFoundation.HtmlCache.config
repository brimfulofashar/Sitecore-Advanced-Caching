<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:messagingTransport="http://www.sitecore.net/xmlconfig/messagingTransport/">
  <sitecore role:require="Standalone or ContentManagement or ContentDelivery" messagingTransport:require="SQL">
    <commands role:require="Standalone or ContentManagement">
      <command name="cache:SiteClearCacheCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheCommand,Foundation.HtmlCache"/>
      <command name="cache:SiteClearCacheAllLanguagesCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheAllLanguagesCommand,Foundation.HtmlCache"/>
      <command name="cache:SiteClearCacheAllSitesCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheAllSitesCommand,Foundation.HtmlCache"/>
    </commands>
    <settings>
      <!-- This setting contains all common templates that should be tracked across multiple renderings such as images, pdfs etc.-->
      <setting name="GlobalCacheableTemplateIDs" value="{DAF085E8-602E-43A6-8299-038FF171349F}"/>
      <setting name="PersistRecordedHtml" value="true" />

      <setting name="MaxItemNameLength" value="100">
        <patch:attribute name="value">3000</patch:attribute>
      </setting>
      <setting name="AllowDuplicateItemNamesOnSameLevel" value="true">
        <patch:attribute name="value">false</patch:attribute>
      </setting>

    </settings>
    <pipelines>
      <initialize>
        <processor type="Foundation.HtmlCache.Pipelines.InitializeMessageBus, Foundation.HtmlCache" method="Initialize" role:require="Standalone or ContentManagement or ContentDelivery" />
        <processor type="Foundation.HtmlCache.Pipelines.InitializePersistedHtmlCache, Foundation.HtmlCache" method="Initialize" role:require="Standalone" />
      </initialize>
      <mvc.renderRendering>
        <processor
          type="Foundation.HtmlCache.Pipelines.RenderFromPersistantCache, Foundation.HtmlCache"
          patch:after="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderFromCache, Sitecore.Mvc']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.BeginRenderingContext, Foundation.HtmlCache"
          patch:after="processor[@type='Foundation.HtmlCache.Pipelines.RenderFromPersistantCache, Foundation.HtmlCache']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.EndRenderingContext, Foundation.HtmlCache"
          patch:before="processor[@type='Foundation.HtmlCache.Pipelines.SaveToPersistantCache, Foundation.HtmlCache']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.SaveToPersistantCache, Foundation.HtmlCache"
          patch:before="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.AddRecordedHtmlToCache, Sitecore.Mvc']" role:require="Standalone or ContentDelivery" />
      </mvc.renderRendering>
      <group name="itemProvider" groupName="itemProvider">
        <pipelines>
          <getItem>
            <processor
              type="Foundation.HtmlCache.Providers.TrackItemAccess, Foundation.HtmlCache"
              patch:after="processor[@type='Sitecore.ContentTesting.Pipelines.ItemProvider.GetItem.GetItemUnderTestProcessor, Sitecore.ContentTesting']" role:require="Standalone or ContentDelivery" />
          </getItem>
        </pipelines>
      </group>
    </pipelines>
    <events>
      <event name="publish:itemProcessing">
        <handler type="Foundation.HtmlCache.Events.ItemPrePublish, Foundation.HtmlCache" method="CalculatePublishOperation" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:itemProcessed">
        <handler type="Foundation.HtmlCache.Events.ItemPublishMessenger, Foundation.HtmlCache" method="PublishItemPublishMessage" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:end">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <patch:delete />
        </handler>
      </event>
      <event name="publish:end:remote">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <patch:delete />
        </handler>
      </event>
    </events>
    <controlSources>
      <source mode="on" namespace="Foundation.HtmlCache.Controls" assembly="Foundation.HtmlCache" prefix="Foundation.HtmlCache"/>
    </controlSources>

    <Messaging>
      <Rebus>
        <!-- point to point -->
        <Foundation.HtmlCache.Bus.HtmlCacheMessageBusSend>
          <Transport>
            <SqlServer>
              <OneWay role:require="Standalone">false</OneWay>
              <OneWay role:require="ContentManagement">true</OneWay>
              <OneWay role:require="ContentDelivery">true</OneWay>
              <ConnectionStringOrName>messaging</ConnectionStringOrName>
              <InputQueueName>HtmlCacheMessageQueue</InputQueueName>
            </SqlServer>
          </Transport>
          <Routing>
            <TypeBasedMappings>
              <TypeMappings>
                <!-- CD > CD -->
                <AddToCacheMapping>
                  <Type>Foundation.HtmlCache.Messages.AddToCache, Foundation.HtmlCache</Type>
                  <DestinationQueue>HtmlCacheMessageQueue</DestinationQueue>
                </AddToCacheMapping>
                <!-- CD > single CM -->
                <AddToCacheStoreMapping>
                  <Type>Foundation.HtmlCache.Messages.AddToCacheStore, Foundation.HtmlCache</Type>
                  <DestinationQueue>HtmlCacheMessageQueue</DestinationQueue>
                </AddToCacheStoreMapping>
                <!-- CD > single CM -->
                <RecomputePersistedHtmlCacheMapping>
                  <Type>Foundation.HtmlCache.Messages.RecomputePersistedHtmlCache, Foundation.HtmlCache</Type>
                  <DestinationQueue>HtmlCacheMessageQueue</DestinationQueue>
                </RecomputePersistedHtmlCacheMapping>
              </TypeMappings>
            </TypeBasedMappings>
          </Routing>
          <Options role:require="Standalone or ContentManagement or ContentDelivery">
            <SetNumberOfWorkers>1</SetNumberOfWorkers>
            <SimpleRetryStrategy>
              <ErrorQueueAddress>Error</ErrorQueueAddress>
              <MaxDeliveryAttempts>0</MaxDeliveryAttempts>
              <SecondLevelRetriesEnabled>false</SecondLevelRetriesEnabled>
            </SimpleRetryStrategy>
          </Options>
          <Logging Type="Sitecore.Messaging.SitecoreLoggerFactory,Sitecore.Messaging"/>
        </Foundation.HtmlCache.Bus.HtmlCacheMessageBusSend>

        <!-- pub/sub-->
        <Foundation.HtmlCache.Bus.HtmlCacheMessageBusPublisher>
          <Transport>
            <SqlServer>
              <OneWay role:require="Standalone">false</OneWay>
              <OneWay role:require="ContentManagement">true</OneWay>
              <OneWay role:require="ContentDelivery">true</OneWay>
              <ConnectionStringOrName>messaging</ConnectionStringOrName>
              <InputQueueName>HtmlCacheMessageBusSubscriber</InputQueueName>
            </SqlServer>
          </Transport>
          <Subscribers>
            <TypeMappings>
              <!-- CM > All CDs -->
              <DeleteFromCacheMapping>
                <Type>Foundation.HtmlCache.Messages.DeleteFromCache, Foundation.HtmlCache</Type>
                <PublisherQueue>HtmlCacheMessageBusPublisher</PublisherQueue>
              </DeleteFromCacheMapping>
              <!-- CM > All CDs -->
              <BroadcastCacheMapping>
                <Type>Foundation.HtmlCache.Messages.BroadcastCache, Foundation.HtmlCache</Type>
                <PublisherQueue>HtmlCacheMessageBusPublisher</PublisherQueue>
              </BroadcastCacheMapping>
              <!-- CM > All CDs -->
              <DeleteSiteFromCacheMapping>
                <Type>Foundation.HtmlCache.Messages.DeleteSiteFromCache, Foundation.HtmlCache</Type>
                <PublisherQueue>HtmlCacheMessageBusPublisher</PublisherQueue>
              </DeleteSiteFromCacheMapping>
            </TypeMappings>
          </Subscribers>
          <Options role:require="Standalone or ContentManagement or ContentDelivery">
            <SetNumberOfWorkers>1</SetNumberOfWorkers>
            <SimpleRetryStrategy>
              <ErrorQueueAddress>Error</ErrorQueueAddress>
              <MaxDeliveryAttempts>0</MaxDeliveryAttempts>
              <SecondLevelRetriesEnabled>false</SecondLevelRetriesEnabled>
            </SimpleRetryStrategy>
          </Options>
          <Logging Type="Sitecore.Messaging.SitecoreLoggerFactory,Sitecore.Messaging"/>
        </Foundation.HtmlCache.Bus.HtmlCacheMessageBusPublisher>

      </Rebus>
    </Messaging>

    <services>
      <!-- point to point -->
      <register
        serviceType="Sitecore.Framework.Messaging.IMessageHandler`1[[Foundation.HtmlCache.Messages.AddToCache, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions"
        implementationType="Foundation.HtmlCache.Handlers.AddToCacheBusMessageHandler, Foundation.HtmlCache"
        lifetime="Transient" role:require="Standalone or ContentDelivery"/>
      <register
        serviceType="Sitecore.Framework.Messaging.IMessageHandler`1[[Foundation.HtmlCache.Messages.AddToCacheStore, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions"
        implementationType="Foundation.HtmlCache.Handlers.AddToCacheBusMessageHandler, Foundation.HtmlCache"
        lifetime="Transient" role:require="Standalone or ContentManagement"/>
      <register
        serviceType="Sitecore.Framework.Messaging.IMessageHandler`1[[Foundation.HtmlCache.Messages.RecomputePersistedHtmlCache, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions"
        implementationType="Foundation.HtmlCache.Handlers.RecomputePersistedHtmlCacheBusMessageHandler, Foundation.HtmlCache"
        lifetime="Transient" role:require="Standalone or ContentManagement"/>

      <!-- pub/sub-->
      <register
        serviceType="Sitecore.Processing.Tasks.Messaging.ISynchronizedMessageBusContext`1[[Sitecore.Framework.Messaging.IMessageBus`1[[Foundation.HtmlCache.Messages.DeleteFromCache, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions]], Sitecore.Processing.Tasks.Messaging"
        implementationType="Sitecore.Processing.Tasks.Messaging.SynchronizedMessageBusContext`1[[Sitecore.Framework.Messaging.IMessageBus`1[[Foundation.HtmlCache.Handlers.DeleteFromCacheBusMessageHandler, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions]], Sitecore.Processing.Tasks.Messaging"
        lifetime="Transient" role:require="Standalone or ContentDelivery"/>
      <register
        serviceType="Sitecore.Processing.Tasks.Messaging.ISynchronizedMessageBusContext`1[[Sitecore.Framework.Messaging.IMessageBus`1[[Foundation.HtmlCache.Messages.DeleteSiteFromCache, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions]], Sitecore.Processing.Tasks.Messaging"
        implementationType="Sitecore.Processing.Tasks.Messaging.SynchronizedMessageBusContext`1[[Sitecore.Framework.Messaging.IMessageBus`1[[Foundation.HtmlCache.Handlers.DeleteSiteFromCacheBusMessageHandler, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions]], Sitecore.Processing.Tasks.Messaging"
        lifetime="Transient" role:require="Standalone or ContentDelivery"/>
      <register
        serviceType="Sitecore.Processing.Tasks.Messaging.ISynchronizedMessageBusContext`1[[Sitecore.Framework.Messaging.IMessageBus`1[[Foundation.HtmlCache.Messages.BroadcastCache, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions]], Sitecore.Processing.Tasks.Messaging"
        implementationType="Sitecore.Processing.Tasks.Messaging.SynchronizedMessageBusContext`1[[Sitecore.Framework.Messaging.IMessageBus`1[[Foundation.HtmlCache.Handlers.BroadcastCacheBusMessageHandler, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions]], Sitecore.Processing.Tasks.Messaging"
        lifetime="Transient" role:require="Standalone or ContentDelivery"/>

      <!-- <configurator type="Foundation.HtmlCache.Configuration.ServicesConfigurator, Foundation.HtmlCache" role:require="Standalone or ContentDelivery"/> -->
      <!-- <configurator type="Foundation.HtmlCache.Configuration.ServicesConfiguratorCm, Foundation.HtmlCache" role:require="Standalone or ContentManagement"/> -->
    </services>

    <contentSearch>
      <indexConfigurations>
        <indexUpdateStrategies>
          <intervalAsyncWeb type="Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy, Sitecore.ContentSearch" role:require="Standalone or ContentManagement or Indexing">
            <param desc="database">web</param>
            <param desc="interval">00:00:10</param>
            <!-- Whether or not a full index rebuild should be triggered when the number of items in the EventQueue exceeds the number specified 
               in ContentSearch.FullRebuildItemCountThreshold. -->
            <CheckForThreshold>false</CheckForThreshold>
          </intervalAsyncWeb>
        </indexUpdateStrategies>
      </indexConfigurations>

      <configuration type="Sitecore.ContentSearch.ContentSearchConfiguration, Sitecore.ContentSearch">
        <indexes hint="list:AddIndex">
          <index id="sitecore_cache_index" type="Sitecore.ContentSearch.SolrProvider.SolrSearchIndex, Sitecore.ContentSearch.SolrProvider">
            <param desc="name">$(id)</param>
            <param desc="core">$(id)</param>
            <param desc="propertyStore" ref="contentSearch/indexConfigurations/databasePropertyStore" param1="$(id)" />
            <configuration ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration" />
            <strategies hint="list:AddStrategy">
              <strategy ref="contentSearch/indexConfigurations/indexUpdateStrategies/intervalAsyncWeb" role:require="Standalone or ContentManagement or Indexing" />
            </strategies>
            <locations hint="list:AddCrawler">
              <crawler type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
                <Database>master</Database>
                <Root>/sitecore/system/Modules/HtmlCache</Root>
              </crawler>
            </locations>
            <enableItemLanguageFallback>false</enableItemLanguageFallback>
            <enableFieldLanguageFallback>false</enableFieldLanguageFallback>
          </index>
        </indexes>
      </configuration>
    </contentSearch>

  </sitecore>
</configuration>