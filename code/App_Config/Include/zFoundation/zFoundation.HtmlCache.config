<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:messagingTransport="http://www.sitecore.net/xmlconfig/messagingTransport/">
  <sitecore role:require="Standalone or ContentManagement or ContentDelivery" messagingTransport:require="SQL">
    <commands role:require="Standalone or ContentManagement">
      <command name="cache:SiteClearCacheCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheCommand,Foundation.HtmlCache"/>
      <command name="cache:SiteClearCacheAllLanguagesCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheAllLanguagesCommand,Foundation.HtmlCache"/>
      <command name="cache:SiteClearCacheAllSitesCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheAllSitesCommand,Foundation.HtmlCache"/>
    </commands>
    <settings>
      <!-- This setting contains all common templates that should be tracked across multiple renderings such as images, pdfs etc.-->
      <setting name="GlobalCacheableTemplateIDs" value=""/>
    </settings>
    <pipelines>
      <initialize>
        <processor type="Foundation.HtmlCache.Pipelines.InitializePersistedHtmlCache, Foundation.HtmlCache" method="Initialize" role:require="Standalone or ContentDelivery" />
        <processor type="Foundation.HtmlCache.Pipelines.InitializeServiceBus, Foundation.HtmlCache" resolve="true" />
      </initialize>
      <mvc.requestBegin>
        <processor
          type="Foundation.HtmlCache.Pipelines.BeginTrackingContext, Foundation.HtmlCache"
          patch:after="processor[@type='Sitecore.ContentTesting.Mvc.Pipelines.Response.RequestBegin.EvaluateTestExposure, Sitecore.ContentTesting.Mvc']" role:require="Standalone or ContentDelivery" />
      </mvc.requestBegin>
      <mvc.renderRendering>
        <processor
          type="Foundation.HtmlCache.Pipelines.BeginRenderingContext, Foundation.HtmlCache"
          patch:after="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderFromCache, Sitecore.Mvc']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.EndRenderingContext, Foundation.HtmlCache"
          patch:before="processor[@type='Foundation.HtmlCache.Pipelines.SaveToPersistantCache, Foundation.HtmlCache']" role:require="Standalone or ContentDelivery" />
      </mvc.renderRendering>
      <mvc.requestEnd>
        <processor
          type="Foundation.HtmlCache.Pipelines.EndTrackingContext, Foundation.HtmlCache"
          patch:after="processor[@type='Sitecore.Mvc.ExperienceEditor.Pipelines.Request.RequestEnd.AddPageExtenders, Sitecore.Mvc.ExperienceEditor']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.SaveToPersistantCache, Foundation.HtmlCache"
          patch:after="processor[@type='Foundation.HtmlCache.Pipelines.EndTrackingContext, Foundation.HtmlCache']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.BroadcastHtmlCache, Foundation.HtmlCache"
          patch:after="processor[@type='Foundation.HtmlCache.Pipelines.SaveToPersistantCache, Foundation.HtmlCache']" role:require="Standalone or ContentDelivery" />
      </mvc.requestEnd>
      <group name="itemProvider" groupName="itemProvider">
        <pipelines>
          <getItem>
            <processor
              type="Foundation.HtmlCache.Providers.TrackItemAccess, Foundation.HtmlCache"
              patch:after="processor[@type='Sitecore.ContentTesting.Pipelines.ItemProvider.GetItem.GetItemUnderTestProcessor, Sitecore.ContentTesting']" role:require="Standalone or ContentDelivery" />
          </getItem>
        </pipelines>
      </group>
    </pipelines>
    <events>
      <event name="publish:begin">
        <handler type="Foundation.HtmlCache.Events.PublishJobBegin, Foundation.HtmlCache" method="BeginPublishTracking" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:itemProcessing">
        <handler type="Foundation.HtmlCache.Events.ItemPrePublish, Foundation.HtmlCache" method="PreCalculatePublishOperation" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:itemProcessed">
        <handler type="Foundation.HtmlCache.Events.ItemPostPublish, Foundation.HtmlCache" method="PostCalculatePublishOperation" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:end">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <patch:delete />
        </handler>
        <handler type="Foundation.HtmlCache.Events.PublishJobEnd, Foundation.HtmlCache" method="SavePublishedItemsToCacheDb" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:end:remote">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <patch:delete />
        </handler>
      </event>
      <event name="cache:clearCacheHtml:Remote">
        <handler type="Foundation.HtmlCache.Events.ClearCacheHtml, Foundation.HtmlCache" method="Clear" role:require="Standalone or ContentDelivery" />
      </event>
      <event name="cache:clearCacheSite:Remote">
        <handler type="Foundation.HtmlCache.Events.ClearCacheSite, Foundation.HtmlCache" method="Clear" role:require="Standalone or ContentDelivery" />
      </event>
    </events>
    <controlSources>
      <source mode="on" namespace="Foundation.HtmlCache.Controls" assembly="Foundation.HtmlCache" prefix="Foundation.HtmlCache"/>
    </controlSources>
    <services>
      <register serviceType="Sitecore.Framework.Messaging.IMessageHandler`1[[Foundation.HtmlCache.Messaging.Message.BroadcastHtmlCacheMessage, Foundation.HtmlCache]], Sitecore.Framework.Messaging.Abstractions" implementationType="Foundation.HtmlCache.Messaging.Handlers.BroadcastHtmlCacheHandler, Foundation.HtmlCache" lifetime="Transient" />
    </services>
    <Messaging>
      <Rebus>
        <Foundation.HtmlCache.Messaging.Bus.BroadcastHtmlCacheBus>
          <Transport>
            <AzureServiceBus messagingTransport:require="AzureServiceBus">
              <OneWay role:require="Standalone or ContentDelivery">false</OneWay>
              <OneWay role:require="ContentManagement">true</OneWay>
              <ConnectionStringOrName>messaging</ConnectionStringOrName>
              <Mode>Standard</Mode>
              <InputQueueName>HtmlCacheQueue_Subscriber</InputQueueName>
            </AzureServiceBus>
            <SqlServer messagingTransport:require="SQL">
              <OneWay role:require="Standalone or ContentDelivery">false</OneWay>
              <OneWay role:require="ContentManagement">true</OneWay>
              <ConnectionStringOrName>messaging</ConnectionStringOrName>
              <InputQueueName>HtmlCacheQueue_Subscriber</InputQueueName>
            </SqlServer>
          </Transport>

          <Subscriptions>
            <SqlServer>
              <!--Set of credentials for proper connection to database-->
              <ConnectionStringOrName>messaging</ConnectionStringOrName>
              <!--The name of the table which saves the information about the relationships between queues and messages-->
              <TableName>Sitecore_Subscriptions</TableName>
              <!--Means that both subscribers and publishers have access to the same central subscription storage-->
              <IsCentralized>true</IsCentralized>
              <RetryerName>ExponentialRetryer</RetryerName>
            </SqlServer>
          </Subscriptions>

          <Subscribers role:require="Standalone or ContentDelivery">
            <TypeMappings>
              <BroadcastHtmlCacheMapping>
                <Type>Foundation.HtmlCache.Messaging.Message.BroadcastHtmlCacheMessage, Foundation.HtmlCache</Type>
                <PublisherQueue>HtmlCacheQueue_Subscriber</PublisherQueue>
              </BroadcastHtmlCacheMapping>
            </TypeMappings>
          </Subscribers>
          <Logging Type="Sitecore.Messaging.SitecoreLoggerFactory, Sitecore.Messaging"/>
        </Foundation.HtmlCache.Messaging.Bus.BroadcastHtmlCacheBus>
      </Rebus>
    </Messaging>
  </sitecore>
</configuration>