<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore>
    <commands role:require="Standalone or ContentManagement">
      <command name="cache:SiteClearCacheCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheCommand,Foundation.HtmlCache"/>
      <command name="cache:SiteClearCacheAllLanguagesCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheAllLanguagesCommand,Foundation.HtmlCache"/>
      <command name="cache:SiteClearCacheAllSitesCommand" type="Foundation.HtmlCache.Commands.SiteClearCacheAllSitesCommand,Foundation.HtmlCache"/>
    </commands>
    <settings>
      <!-- This setting contains all common templates that should be tracked across multiple renderings such as images, pdfs etc.-->
      <setting name="GlobalCacheableTemplateIDs" value="{DAF085E8-602E-43A6-8299-038FF171349F}"/>
      <setting name="ItemTrackingQueueProcessInterval" value="10000"/>
    </settings>
    <pipelines>
      <initialize>
        <processor type="Foundation.HtmlCache.Pipelines.InitializeMessageBus, Foundation.HtmlCache" method="Initialize" role:require="Standalone or ContentManagement or ContentDelivery" />
      </initialize>
      <mvc.renderRendering>
        <processor
          type="Foundation.HtmlCache.Pipelines.BeginRenderingContextProcessor, Foundation.HtmlCache"
          patch:after="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderFromCache, Sitecore.Mvc']" role:require="Standalone or ContentDelivery" />
        <processor
          type="Foundation.HtmlCache.Pipelines.EndRenderingContextProcessor, Foundation.HtmlCache"
          patch:before="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.AddRecordedHtmlToCache, Sitecore.Mvc']" role:require="Standalone or ContentDelivery" />
      </mvc.renderRendering>
      <group name="itemProvider" groupName="itemProvider">
        <pipelines>
          <getItem>
            <processor
              type="Foundation.HtmlCache.Providers.TrackItemAccess, Foundation.HtmlCache"
              patch:after="processor[@type='Sitecore.ContentTesting.Pipelines.ItemProvider.GetItem.GetItemUnderTestProcessor, Sitecore.ContentTesting']" role:require="Standalone or ContentDelivery" />
          </getItem>
        </pipelines>
      </group>
    </pipelines>
    <events>
      <event name="publish:itemProcessing">
        <handler type="Foundation.HtmlCache.Events.ItemPrePublish, Foundation.HtmlCache" method="CalculatePublishOperation" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:itemProcessed">
        <handler type="Foundation.HtmlCache.Events.ItemPublishMessenger, Foundation.HtmlCache" method="PublishItemPublishMessage" role:require="Standalone or ContentManagement"/>
      </event>
      <event name="publish:end">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <patch:delete />
        </handler>
      </event>
      <event name="publish:end:remote">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <patch:delete />
        </handler>
      </event>
    </events>
    <controlSources>
      <source mode="on" namespace="Foundation.HtmlCache.Controls" assembly="Foundation.HtmlCache" prefix="Foundation.HtmlCache"/>
    </controlSources>

    <Messaging>
      <Rebus>
        <Foundation.HtmlCache.Bus.HtmlCacheMessageBus>
          <Transport>
            <SqlServer>
              <OneWay role:require="Standalone or ContentDelivery">false</OneWay>
              <OneWay role:require="ContentManagement">true</OneWay>
              <ConnectionStringOrName>messaging</ConnectionStringOrName>
              <TableName>Sitecore_Transport</TableName>
              <InputQueueName>HtmlCacheMessageQueue</InputQueueName>
            </SqlServer>
          </Transport>
          <Routing>
            <TypeBasedMappings>
              <TypeMappings>
                <TrackItemMapping>
                  <Type>Foundation.HtmlCache.Models.AddToCache, Foundation.HtmlCache</Type>
                  <DestinationQueue>HtmlCacheMessageQueue</DestinationQueue>
                </TrackItemMapping>
                <!-- <ItemsPublishedMapping> -->
                <!--   <Type>SitecoreHacker.London.Foundation.EmailCampaign.EDS.Messaging.Model.EmailBounceMessage, SitecoreHacker.London</Type> -->
                <!--   <DestinationQueue>HtmlCacheMessageQueue</DestinationQueue> -->
                <!-- </ItemsPublishedMapping> -->
                <!-- <ClearSiteMapping> -->
                <!--   <Type>SitecoreHacker.London.Foundation.EmailCampaign.EDS.Messaging.Model.EmailBounceMessage, SitecoreHacker.London</Type> -->
                <!--   <DestinationQueue>HtmlCacheMessageQueue</DestinationQueue> -->
                <!-- </ClearSiteMapping> -->
              </TypeMappings>
            </TypeBasedMappings>
          </Routing>
          <Options role:require="Standalone or ContentDelivery">
            <SetNumberOfWorkers>1</SetNumberOfWorkers>
            <SimpleRetryStrategy>
              <ErrorQueueAddress>Error</ErrorQueueAddress>
              <MaxDeliveryAttempts>1</MaxDeliveryAttempts>
              <SecondLevelRetriesEnabled>false</SecondLevelRetriesEnabled>
            </SimpleRetryStrategy>
          </Options>
          <Logging Type="Sitecore.Messaging.SitecoreLoggerFactory,Sitecore.Messaging"/>
        </Foundation.HtmlCache.Bus.HtmlCacheMessageBus>
      </Rebus>
    </Messaging>

    <services>
      <configurator type="Foundation.HtmlCache.Configuration.ServicesConfigurator, Foundation.HtmlCache" role:require="Standalone or ContentDelivery"/>
    </services>
  </sitecore>
</configuration>