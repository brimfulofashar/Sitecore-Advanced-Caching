// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.co.uk/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Registered to: Ashar Shah
// Company      : N/A
// Licence Type : Commercial
// Licences     : 1
// Valid until  : 11 DEC 2020
//
// Do not make changes directly to this file - edit the template instead.
// ------------------------------------------------------------------------------------------------

// <auto-generated>
// ReSharper disable CheckNamespace
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable NotAccessedVariable
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantCast
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// ReSharper disable UsePatternMatching

using System;
using System.Collections.Generic;
using System.Data.Entity.Infrastructure;
using System.Threading;
using System.Threading.Tasks;

namespace Foundation.HtmlCache.DB
{
    // CacheKeys
    public class CacheKey
    {
        public Guid Id { get; set; } // Id (Primary key)
        public Guid? CacheSiteLangId { get; set; } // CacheSiteLang_Id
        public string HtmlCacheKey { get; set; } // HtmlCacheKey (length: 500)
        public string HtmlCacheResult { get; set; } // HtmlCacheResult

        // Reverse navigation

        /// <summary>
        /// Child CacheItems where [CacheItems].[CacheKey_Id] point to this entity (FK_CacheItems_CacheKeys)
        /// </summary>
        public virtual ICollection<CacheItem> CacheItems { get; set; } // CacheItems.FK_CacheItems_CacheKeys

        /// <summary>
        /// Child CacheKeysItems where [CacheKeysItems].[CacheKey_Id] point to this entity (FK_CacheKeysItems_CacheKeys)
        /// </summary>
        public virtual ICollection<CacheKeysItem> CacheKeysItems { get; set; } // CacheKeysItems.FK_CacheKeysItems_CacheKeys

        // Foreign keys

        /// <summary>
        /// Parent CacheSiteLang pointed by [CacheKeys].([CacheSiteLangId]) (FK_CacheKeys_CacheSiteLang)
        /// </summary>
        public virtual CacheSiteLang CacheSiteLang { get; set; } // FK_CacheKeys_CacheSiteLang

        public CacheKey()
        {
            CacheItems = new List<CacheItem>();
            CacheKeysItems = new List<CacheKeysItem>();
        }
    }

}
// </auto-generated>

